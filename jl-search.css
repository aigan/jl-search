jl-search {
  display: inline-block;
  font-family: var(--font-family, sans-serif);
  --_padding: var(--padding, 0.5em);
  --_line-height: var(--line-height, 1.2);
  --_outline-base-color: var(--outline-color, gray);
  --_hover-color: var(--hover-color, black);
  --_hover-brightness: 75%;
  --_active-color: var(--active-color, orange);
  --_focus-color: var(--focus-color, green);
  --_focus-bg: var(--focus-bg, lightgray);
  --_highlight-bg: var(--highlight-bg, bisque);
  --_disabled-color: var(--disabled-color, silver);
  --_input-bg: var(--input-bg, white);
  --_input-ink: var(--input-ink, black);
  --_selected-bg: var(--selected-bg, palegreen);
  --_selected-ink: var(--selected-ink, maroon);
  --_disabled_content_opacity: var(--disabled-opacity, 0.38);
  --_border-width: var(--border-width, 0.15rem);
  --_border-width-focus: var(--border-width-focus, 0.25rem);
  --_border-radius: var(--border-radius, 0.35rem);
  --_hr-color: var(--hr-background, silver);
  --_shadow-color: var(--shadow-color, black);
  --_drop-shadow: 0 0.8rem 1rem 0 rgba(0 0 0 / 0.5);
  --_error-ink: var(--error-ink, red);
  --_error-container-bg: var(--error-container-bg, lightsalmon);
  --_error-container-ink: var(--error-container-ink, maroon);

  --_outline-color: var(--_outline-base-color);
  --_outline-width: var(--_border-width);
  --_input-height: calc(var(--_line-height) * 1em + 2 * var(--_padding));

  /* The height of the reserved space regardless of if the element is expanded
  or moved, as on small mobile viewport */
  height: var(--_input-height);
}

/*
Layering several states on top of each other.
 - :focus 
 - [selected] 
 - [opened] 
 - :hover Darken current color
 - :active 
 - :disabled
*/



jl-search main {
  /* The popover element that can be expanded or moved */
  position: static;
  display: inline-block;
  border: 0;
  margin: 0;
  padding: 0;
  width: 100%;

  /* Takes the visual role of the input element, with outline */
  border-radius: var(--_border-radius);
  --_outline: solid var(--_outline-width) var(--_outline-color);
  outline: var(--_outline);

  /* While animating shake */
  overflow: hidden;

  view-transition-name: jl-search-field;
  transition: box-shadow 0.2s, outline-width 0.2s;
}

jl-search[opened] main {
  /* (almost) Same as :popover-open */
  position: absolute;
  top: anchor(top);
  left: anchor(left);
  width: anchor-size(width);


  --_outline-width: var(--_border-width-focus);
  /* --_outline: solid var(--_outline-width) var(--_outline-color); */
  box-shadow: var(--_drop-shadow);
}


jl-search fieldset {
  /* Reset browser fieldset style */
  margin: 0;
  padding: 0;
  border: 0;

  display: flex;
  align-items: center;

  --_bg: var(--_input-bg);
  background: var(--_bg);
  color: var(--_input-ink);

  /* Since the options popover are using shadow as an outline for handline the
  border different, using a masking color for the top, we must use box-shadow
  here also in order to have a consistent border between this and the
  popover.*/
}

jl-search[selected] fieldset {
  --_bg: var(--_selected-bg);
  color: var(--_selected-ink);
}

jl-search fieldset>span {
  flex: 0 0 auto;
}

jl-search input {
  /* No side padding because of side elements having their own spacing */
  padding: var(--_padding) 0;

  margin: 0;
  border: none;
  outline: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
  background-color: transparent;

  box-sizing: content-box;
  width: 100%; /* (of content-box) */
}

jl-search input::selection {
  background: var(--_highlight-bg);
}

jl-search input:focus,
jl-search input:focus-within {
  /* Reset browser styles */
  outline: none;
  border: none;
}

jl-search main:focus-within {
  --_outline-base-color: var(--_focus-color);
}

jl-search main:hover {
  /* --_outline-color: var(--_hover-color); */
  --_outline-color: color-mix(in oklch, var(--_outline-base-color) var(--_hover-brightness), black);
}

jl-search main:active {
  --_outline-base-color: var(--_active-color);
}

::view-transition-group(jl-search-field) {
  animation-duration: 0s;
}

jl-search fieldset:has(input:not(:disabled)) .state:hover {
  /* Allows for hover on any bg  */
  background: color-mix(in oklch, var(--_bg) var(--_hover-brightness), black);

  /* Will be cut off by the options shadow masking  bottom */
  border-radius: var(--_border-radius);
  cursor: pointer;
}


jl-search main:has(input:disabled, input:active:disabled) {
  opacity: var(--_disabled_content_opacity);
  --_outline-color: var(--_disabled-color);
}

jl-search nav {
  background: var(--_input-bg);

  transition: grid-template-rows var(--jl-search_move-speed) ease-out;

  /* transition: grid-template-rows var(--jl-search_move-speed) ease-out,
    box-shadow 0.2s; */

  /* transition: height 2s ease-out; */


  display: grid;
  grid-template-rows: 0fr;

  /* height: var(--_input-height); */
}


jl-search[opened] nav {
  /* First line paints over the top shadow. Adding 1px for rounding errors.
  Would be less hacky to use border-top but that would make positinong harder
  with varying border width. Outline does not support individual directions.
  The paintover visually fails for width larger than field padding.
  */

  /* box-shadow: 0 calc(-0.6px - var(--_border-width-focus)) 0 0 var(--_input-bg),
    var(--_outline), var(--_drop-shadow); */

  /* height: max-content; */
  /* grid-template-rows: 1fr; */
  --ignore: me;
}

jl-search[opened]:not([data-anim="closing"]) main:popover-open nav {
  grid-template-rows: 1fr;
}
jl-search[opened]:not([data-anim="closing"]) main.\:popover-open nav {
  grid-template-rows: 1fr;
}

jl-search nav>section {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  /* height: 0; */
}

jl-search[opened] nav>section {
  height: fit-content;
}

/* Only show hr if there are options that should be separated from top or
bottom */

jl-search nav hr {
  border: thin solid var(--_hr-color);
  margin: 0 var(--_padding);
}

jl-search nav.empty hr:has(+ ul) {
  display: none;
}

jl-search[selected] nav hr:has(+ ul) {
  display: none;
}

jl-search nav hr:has(+ .error) {
  display: none;
}

jl-search nav .error {
  background: var(--_error-container-bg);
  color: var(--_error-container-ink);
}

jl-search .state {
  height: 1em;
}

jl-search[data-state="error"] .state {
  color: var(--_error-ink);
}

jl-search ul {
  list-style: none;
  margin: 0;
  padding: calc(var(--_padding) / 2) 0;

  display: flex;
  flex-direction: column;
  line-height: 1;
}

jl-search ul>li {
  padding: calc(var(--_padding) / 2) var(--_padding);
  cursor: pointer;
  --_bg: var(--_input-bg);
  background: var(--_bg);
}

jl-search ul>li[aria-selected="true"] {
  --_bg: var(--_highlight-bg);
}

jl-search ul>li:hover {
  /* Allows for hover on any bg */
  background: color-mix(in oklch, var(--_bg) var(--_hover-brightness), black);
}

jl-search nav footer {
  font-size: 0.875em;
  padding: var(--_padding);
}

jl-search .spin {
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(359deg);
  }
}

/* Zoom in input on smaller screens */
/* 30rem = 480px = larger than normal phone screens */
@media (max-width: 30rem) {
  jl-search nav>section {
    height: auto;
  }

  jl-search[opened] main {
    position: fixed;
    top: var(--_border-width-focus);
    left: var(--_border-width-focus);
    width: calc(100vw - 2 * var(--_border-width-focus));
  }
}

/* ::global */
:root {
  /* Variables that has to be in root. (for view-transitions) They will have
  to be copied if the css is used in shadow-root */
  --jl-search_move-speed: .25s;
}

::view-transition-group(jl-search-field) {
  animation-duration: var(--jl-search_move-speed);
}

::view-transition-old(jl-search-field),
::view-transition-new(jl-search-field) {
  height: 100%;
}
